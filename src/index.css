@tailwind base;
@tailwind components;
@tailwind utilities;

/* -------------------------
   Core utility and looks
   -------------------------*/

/* Gradient rounded search border (kept) */
.search-gradient {
  background: linear-gradient(90deg, #ff3b3b, #7c2ae8);
  padding: 3px;
  border-radius: 9999px;
}
.search-inner {
  border-radius: 9999px;
  background-color: white;
}

/* clamp for titles */
.line-clamp-2 {
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

/* subtle card outline */
.card-outline {
  border: 1px solid rgba(249, 205, 173, 0.65);
}

/* -------------------------
   Gradient animation
   -------------------------*/

@keyframes gradientFlow {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

/* Keep your original gradient colors, just animate */
.animate-gradient {
  background: linear-gradient(90deg, #38bdf8, #3b82f6, #4f46e5, #06b6d4);
  background-size: 300% 300%;
  animation: gradientFlow 6s ease infinite;
}

/* -------------------------
   Responsive search capsule tweaks
   -------------------------*/

/* Ensure the input and inner elements don't overflow their flex container */
#search-input,
.search-inner input,
.search-inner,
.bg-white input {
  box-sizing: border-box;
  width: 100%;
  min-width: 0;
}

/* Target the inner white capsule reliably and give good default height/spacing */
/* This selector matches the structure used in your JSX: <div class="bg-white flex items-center rounded-full ..."> */
.bg-white.flex.items-center.rounded-full {
  min-height: 52px;               /* slightly taller capsule for breathing room */
  gap: 12px;                      /* space between icon, input, and button */
  padding-left: 12px;             /* inner padding so left icon not too close to edge */
  padding-right: 10px;            /* inner padding so button not glued to edge */
}

/* Ensure the input text vertically centers nicely */
.bg-white.flex.items-center.rounded-full input {
  padding-top: 0.4rem;
  padding-bottom: 0.4rem;
  line-height: 1.2;
}

/* Style the icon-only button inside the capsule specifically so other buttons aren't affected */
.bg-white.flex.items-center.rounded-full button[type="submit"] {
  padding: 0.45rem;               /* compact circular button */
  border-radius: 9999px;
  min-width: 40px;                /* keeps tappable target */
  height: auto;
  display: inline-flex;
  align-items: center;
  justify-content: center;
}

/* Give the icon some breathing room (white-on-blue) */
.bg-white.flex.items-center.rounded-full button[type="submit"] svg {
  display: block;
}

/* small shadow / hover (subtle) */
.bg-white.flex.items-center.rounded-full button[type="submit"]:hover {
  box-shadow: 0 6px 18px rgba(14, 165, 233, 0.12);
}

/* touch-friendly sizes on mobile */
@media (max-width: 640px) {
  .bg-white.flex.items-center.rounded-full {
    min-height: 48px;
    padding-left: 10px;
    padding-right: 8px;
    gap: 10px;
  }
  .bg-white.flex.items-center.rounded-full input {
    padding-top: 10px;
    padding-bottom: 10px;
  }
  .bg-white.flex.items-center.rounded-full button[type="submit"] {
    padding: 0.45rem;
    min-width: 36px;
  }
}

/* tiny screen: <= 320px ensure icon-only mode fits and capsule tightens a bit */
@media (max-width: 320px) {
  .bg-white.flex.items-center.rounded-full {
    min-height: 44px;
    padding-left: 8px;
    padding-right: 6px;
    gap: 8px;
  }
  .bg-white.flex.items-center.rounded-full input {
    padding-left: 6px;
    padding-right: 6px;
  }
  .bg-white.flex.items-center.rounded-full button[type="submit"] {
    padding: 0.35rem;
    min-width: 34px;
  }
  /* if you still have a .btn-text span anywhere, ensure hidden on tiny screens */
  .btn-text { display: none !important; }
}

/* keep text visible for screens wider than 320px (if used elsewhere) */
@media (min-width: 321px) {
  .btn-text { display: inline; }
}

/* -------------------------
   Video embed (kept)
   -------------------------*/

/* Responsive video wrapper */
.video-embed {
  position: relative;
  width: 100%;
  /* 16:9 */
  padding-top: 56.25%;
  overflow: hidden;
  background: #000; /* hides white flash while loading */
  border-radius: 8px;
}

.video-embed iframe,
.video-embed video,
.video-embed .player {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border: 0;
  display: block;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* Optional: tiny polish to keep gradient ring from looking too thick on small screens */
@media (max-width: 420px) {
  .animate-gradient { padding: 2px; }
}
/* ======== MOBILE SAFE VIEW (safe, non-invasive) ======== */

/* allow normal page scrolling (so CategoryTabs and static videos are reachable) */
html, body, #root {
  height: 100%;
  min-height: 100vh;
  margin: 0;
  padding: 0;
  overflow: auto; /* allow page to scroll normally */
  -webkit-overflow-scrolling: touch;
}

/* Do NOT force the immediate child of #root to be flex — keep existing React layout intact.
   If your app already uses a flex layout, this won't override it. */
#root > div {
  display: block;
  min-height: 100%;
}

/* If there's a main element in your tree, make it a scrollable area if desired.
   This is optional but helpful if later you switch to a full-height flex layout. */
main {
  flex: 1 1 auto;
  /* allow inner scrolling if structure supports it */
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
  padding-bottom: env(safe-area-inset-bottom, 12px);
}

/* safe bottom padding so native nav in WebView doesn't overlap content */
body {
  padding-bottom: env(safe-area-inset-bottom, 12px);
}

/* footer safety — if you have a footer keep it visible */
footer {
  flex-shrink: 0;
  padding-bottom: env(safe-area-inset-bottom, 12px);
}

/* small tweak for tiny screens so the gradient ring isn't too thick */
@media (max-width: 420px) {
  .animate-gradient { padding: 2px; }
}